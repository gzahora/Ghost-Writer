{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\src\\\\pages\\\\Stories.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport NewStoryBtn from \"../components/NewStory\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nvar Stories =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stories, _Component);\n\n  function Stories() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stories);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stories)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stories: []\n    };\n\n    _this.loadStories = function () {\n      API.getStories().then(function (res) {\n        return _this.setState({\n          stories: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Stories, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadStories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(NewStoryBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/newStory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), \"Add New Story!\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6 sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Active Stories\")), this.state.stories.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.stories.filter(function (stories) {\n        return stories.active;\n      }).map(function (stories) {\n        return React.createElement(ListItem, {\n          key: stories._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/inProgress/\" + stories._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"\\\"\", stories.title, \"\\\"\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), \"Contributors: \", stories.contributors)));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"No Results to Display\")), React.createElement(Col, {\n        size: \"md-6 sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Completed Stories\")), this.state.stories.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.stories.filter(function (stories) {\n        return stories.active != true;\n      }).map(function (stories) {\n        return React.createElement(ListItem, {\n          key: stories._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/stories/\" + stories._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"\\\"\", stories.title, \"\\\"\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), \"Contributors: \", stories.contributors)));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Stories;\n}(Component);\n\nexport default Stories;","map":{"version":3,"sources":["C:\\Users\\gregz\\Desktop\\code\\repos\\project-3---ghost-writer-social\\client\\src\\pages\\Stories.js"],"names":["React","Component","Jumbotron","API","Link","NewStoryBtn","Col","Row","Container","List","ListItem","Stories","state","stories","loadStories","getStories","then","res","setState","data","catch","err","console","log","length","filter","active","map","_id","title","contributors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NewStoryBtn from \"../components/NewStory\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\nclass Stories extends Component {\r\n  state = {\r\n    stories: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadStories();\r\n  }\r\n\r\n  loadStories = () => {\r\n    API.getStories()\r\n      .then(res => this.setState({ stories: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n        <NewStoryBtn>\r\n        {/* the newStory button won't work for some reason */}\r\n        <Link to={\"/newStory\"}></Link>\r\n          Add New Story!\r\n        </NewStoryBtn>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-6 sm-6\">\r\n            <Jumbotron>\r\n              <h1>Active Stories</h1>\r\n            </Jumbotron>\r\n            {this.state.stories.length ? (\r\n              <List>\r\n                {this.state.stories\r\n                .filter(stories => (stories.active))\r\n                .map(stories => (\r\n                  <ListItem key={stories._id}>\r\n                    <a href={\"/inProgress/\" + stories._id}>\r\n                      <strong>\r\n                        \"{stories.title}\"\r\n                        <br></br>\r\n                        Contributors: {stories.contributors}\r\n                      </strong>\r\n                    </a>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n          <Col size=\"md-6 sm-6\">\r\n            <Jumbotron>\r\n              <h1>Completed Stories</h1>\r\n            </Jumbotron>\r\n            {this.state.stories.length ? (\r\n              <List>\r\n                {this.state.stories\r\n                .filter(stories => (stories.active != true))\r\n                .map(stories => (\r\n                  <ListItem key={stories._id}>\r\n                    <a href={\"/stories/\" + stories._id}>\r\n                      <strong>\r\n                        \"{stories.title}\"\r\n                        <br></br>\r\n                        Contributors: {stories.contributors}\r\n                      </strong>\r\n                    </a>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stories;\r\n"]},"metadata":{},"sourceType":"module"}