{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gregz\\\\Desktop\\\\code\\\\repos\\\\project-3---ghost-writer-social\\\\client\\\\src\\\\pages\\\\NewStory.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar NewStory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewStory, _Component);\n\n  function NewStory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewStory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewStory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stories: {}\n    };\n    return _this;\n  }\n\n  _createClass(NewStory, [{\n    key: \"componentDidMount\",\n    // When this component mounts, grab the story with the _id of this.props.match.params.id\n    // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getStory(this.props.match.params.id).then(function (res) {\n        return _this2.setState({\n          stories: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Create a new story!\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"contributors\",\n        placeholder: \"Contributor (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        name: \"story_section\",\n        placeholder: \"Your Addition to the Story (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Submit Your Contribution\")))));\n    }\n  }]);\n\n  return NewStory;\n}(Component);\n\nexport default NewStory;","map":{"version":3,"sources":["C:\\Users\\gregz\\Desktop\\code\\repos\\project-3---ghost-writer-social\\client\\src\\pages\\NewStory.js"],"names":["React","Component","Link","Col","Row","Container","Jumbotron","API","Input","TextArea","FormBtn","NewStory","state","stories","getStory","props","match","params","id","then","res","setState","data","catch","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;;;;AAGR;AACA;wCACoB;AAAA;;AAClBN,MAAAA,GAAG,CAACO,QAAJ,CAAa,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAArC,EACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAEO,GAAG,CAACE;AAAf,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD;;;6BAEQ;AACP,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,WAAW,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,cAAZ;AAA2B,QAAA,WAAW,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,eAAf;AAA+B,QAAA,WAAW,EAAC,uCAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJF,CAJF,CADF,CADF,CADF;AAiBD;;;;EA9BoBvB,S;;AAiCvB,eAAeU,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nclass NewStory extends Component {\r\n  state = {\r\n    stories: {}\r\n  };\r\n  // When this component mounts, grab the story with the _id of this.props.match.params.id\r\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n  componentDidMount() {\r\n    API.getStory(this.props.match.params.id)\r\n      .then(res => this.setState({ stories: res.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>Create a new story!</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input name=\"title\" placeholder=\"Title (required)\" />\r\n              <Input name=\"contributors\" placeholder=\"Contributor (required)\" />\r\n              <TextArea name=\"story_section\" placeholder=\"Your Addition to the Story (required)\" />\r\n              <FormBtn>Submit Your Contribution</FormBtn>\r\n            </form>\r\n          </Col>\r\n          </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewStory;"]},"metadata":{},"sourceType":"module"}